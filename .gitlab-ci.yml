stages:
  - deploy_test
  - deploy_prod

.image: &image_deploy_jobs
  image: debian:latest

deploy_test:
  <<: *image_deploy_jobs
  stage: deploy_test
  before_script:
    - "apt-get update && apt-get install -y jq curl"
  script:
    - "exit `curl -m 3600 -H 'Content-Type: application/json' -X POST -d '{\"token\":\"\'\"$TOKEN\"\'\", \"url\":\"\'\"$CI_BUILD_REPO\"\'\", \"build_stage\":\"\'\"$CI_BUILD_STAGE\"\'\", \"project_name\":\"\'\"$CI_PROJECT_NAME\"\'\", \"branch\":\"\'\"$CI_BUILD_REF_NAME\"\'\"}' $GERALDINE/deploy | jq -r \'.success\'`"
  dependencies: []

deploy_prod:
  <<: *image_deploy_jobs
  stage: deploy_prod
  before_script:
    - "apt-get update && apt-get install -y jq curl"
  script:
    - "exit `curl -m 3600 -H 'Content-Type: application/json' -X POST -d '{\"token\":\"\'\"$TOKEN\"\'\", \"build_stage\":\"\'\"$CI_BUILD_STAGE\"\'\", \"project_name\":\"\'\"$CI_PROJECT_NAME\"\'\", \"branch\":\"\'\"$CI_BUILD_REF_NAME\"\'\"}' $GERALDINE/deploy | jq -r \'.success\'`"
  dependencies: []
  only:
    - master
  when: manual
